<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cj.dao.UserMapper">
	<resultMap id="BaseResultMap" type="cn.cj.entity.User">
		<id column="user_id" jdbcType="BIGINT" property="userId" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="user_account" jdbcType="VARCHAR" property="userAccount" />
		<result column="user_password" jdbcType="VARCHAR" property="userPassword" />
		<result column="open_id" jdbcType="VARCHAR" property="openId" />
		<result column="user_img" jdbcType="VARCHAR" property="userImg" />
		<result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
		<result column="role_id" jdbcType="BIGINT" property="roleId" />
		<result column="is_disable" jdbcType="VARCHAR" property="isDisable" />
		<result column="user_email" jdbcType="VARCHAR" property="userEmail" />
		<result column="user_gender" jdbcType="BIGINT" property="userGender"/>
	</resultMap>
	<sql id="Base_Column_List">
		user_id, user_name, user_account, user_password, open_id, user_img,
		last_login_time,
		role_id, is_disable, user_email,user_gender
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where user_id = #{userId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user
		where user_id = #{userId,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="cn.cj.entity.User">
		insert into user (user_id, user_name, user_account,
		user_password, open_id, user_img,
		last_login_time, role_id, is_disable,
		user_email,user_gender)
		values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR},
		#{userAccount,jdbcType=VARCHAR},
		#{userPassword,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{userImg,jdbcType=VARCHAR},
		#{lastLoginTime,jdbcType=TIMESTAMP}, #{roleId,jdbcType=BIGINT},
		#{isDisable,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR},
		#{userGender,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective" parameterType="cn.cj.entity.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="userAccount != null">
				user_account,
			</if>
			<if test="userPassword != null">
				user_password,
			</if>
			<if test="openId != null">
				open_id,
			</if>
			<if test="userImg != null">
				user_img,
			</if>
			<if test="lastLoginTime != null">
				last_login_time,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
			<if test="isDisable != null">
				is_disable,
			</if>
			<if test="userEmail != null">
				user_email,
			</if>
			<if test="userGender != null">
				user_gender,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userAccount != null">
				#{userAccount,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				#{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="openId != null">
				#{openId,jdbcType=VARCHAR},
			</if>
			<if test="userImg != null">
				#{userImg,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginTime != null">
				#{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=BIGINT},
			</if>
			<if test="isDisable != null">
				#{isDisable,jdbcType=VARCHAR},
			</if>
			<if test="userEmail != null">
				#{userEmail,jdbcType=VARCHAR},
			</if>
			<if test="userGender != null">
				#{userGender,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cn.cj.entity.User">
		update user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userAccount != null">
				user_account = #{userAccount,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				user_password = #{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="openId != null">
				open_id = #{openId,jdbcType=VARCHAR},
			</if>
			<if test="userImg != null">
				user_img = #{userImg,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginTime != null">
				last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=BIGINT},
			</if>
			<if test="isDisable != null">
				is_disable = #{isDisable,jdbcType=VARCHAR},
			</if>
			<if test="userEmail != null">
				user_email = #{userEmail,jdbcType=VARCHAR},
			</if>
			<if test="userGender != null">
				user_gender = #{userGender,jdbcType=BIGINT}, 
			</if>
		</set>
		where user_id = #{userId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.cj.entity.User">
		update user
		set user_name = #{userName,jdbcType=VARCHAR},
		user_account = #{userAccount,jdbcType=VARCHAR},
		user_password = #{userPassword,jdbcType=VARCHAR},
		open_id = #{openId,jdbcType=VARCHAR},
		user_img = #{userImg,jdbcType=VARCHAR},
		last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
		role_id = #{roleId,jdbcType=BIGINT},
		is_disable = #{isDisable,jdbcType=VARCHAR},
		user_email = #{userEmail,jdbcType=VARCHAR},
		user_gender = #{userGender,jdbcType=BIGINT}
		where user_id = #{userId,jdbcType=BIGINT}
	</update>


















	<!-- 根据账号密码获取当前用户信息 -->
	<select id="selectByUserAccount" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user
		where user_account = #{userAccount,jdbcType=VARCHAR}
	</select>
	<!-- 获取所有用户列表 -->
	<select id="selectAllUser" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
	</select>
</mapper>