<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans       	  
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
       	   http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       	   http://www.springframework.org/schema/context
       	   http://www.springframework.org/schema/context/spring-context-3.2.xsd
       	   http://www.springframework.org/schema/tx
       	   http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- 使用外部的properties方式配置 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:conf/jdbc.properties</value>
				<!-- <value>classpath:redis.properties</value> <value>classpath:solr.properties</value> -->
			</list>
		</property>
	</bean>




	<!-- shiro配置statr -->
	<!-- 1.读取配置文件 <bean id="MyRealm" class="org.apache.shiro.realm.text.IniRealm"> 
		<constructor-arg name="resourcePath" value="classpath:conf/shiro.ini"></constructor-arg> 
		</bean> -->
	<!-- 2.自定义realm -->
	<bean id="MyRealm" class="cn.cj.service.shiro.MyRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"></property>
	</bean>
	<!-- 密码加盐配置 -->
	<bean id="credentialsMatcher" class="cn.cj.service.shiro.RetryLimitHashedCredentialsMatcher">
		<constructor-arg ref="cacheManager" />
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="1024" />
	</bean>

	<!-- 缓存配置 使用Ehcache实现 -->
		<!-- 缓存管理器 使用Ehcache实现 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:conf/ehcache.xml" />
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 配置自定义数据源 -->
		<property name="realm" ref="MyRealm"></property>
		<!-- 配置缓存(限制前台请求数据库次数) -->
		<property name="cacheManager" ref="cacheManager"></property>
		<!-- 配置记住我 -->
		<property name="rememberMeManager" ref="rememberMeManager"></property>
	</bean>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<property name="loginUrl" value="/user/login"></property>
		<property name="successUrl" value="/user/index"></property>
		<property name="unauthorizedUrl" value="/user/error"></property>
		<property name="filterChainDefinitions">
			<value>
				/user/login=anon
				<!-- 注意!!! 任何页面如果设置了authc(认证),那么rembmberMe功能就会失效 因为rembmberMe=true不能表明你就是当前登录的用户, 
					那么当当前用户关闭浏览器时,再次访问当前页面的时候,就需要登录 -->
				<!-- /user/index=authc -->
				/back/**=authc,roles[admin]
			</value>
		</property>
	</bean>
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!-- 30天 -->
	</bean>
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- shiro配置end -->





	<!-- jndi内部配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />

		<!-- 心跳设置 -->
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<!-- <property name="maxActive" value="${maxActive}"></property> 连接池最大空闲 
			<property name="maxIdle" value="${maxIdle}"></property> 连接池最小空闲 <property 
			name="minIdle" value="${minIdle}"></property> 获取连接最大等待时间 <property name="maxWait" 
			value="${maxWait}"></property> -->
	</bean>
	<!-- 配置sqlSessionFactoryBean 不继承用SqlSessionTemplate -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:spring/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:cn/cj/mapper/*.xml"></property>
	</bean>
	<!-- 方法4 扫描dao自动装配包(注意这里是映射接口,不是xml) -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.cj.dao" />
	</bean>


	<!-- 异常事务回滚123 -->
	<!-- 1.声明一个事务 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 2.事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" isolation="REPEATABLE_READ"
				rollback-for="ServiceException" />
			<tx:method name="update*" isolation="REPEATABLE_READ"
				rollback-for="ServiceException" />
			<tx:method name="delete*" isolation="REPEATABLE_READ"
				rollback-for="ServiceException" />
			<tx:method name="get*" isolation="REPEATABLE_READ"
				read-only="true" />
			<tx:method name="*" isolation="REPEATABLE_READ"
				propagation="NOT_SUPPORTED" />
		</tx:attributes>
	</tx:advice>
	<!-- 3.aop配置 -->
	<aop:config proxy-target-class="true">
		<!-- 切入点 -->
		<aop:pointcut id="servicesPointcut" expression="execution(* cn.cj.service..*.*(..))" />
		<!-- 运行拦截 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicesPointcut" />
	</aop:config>



	<!-- redis -->
	<!-- <import resource="classpath:resources/redis/redis-context.xml" /> -->
	<!-- 搜索框架 -->
	<!-- <import resource="classpath:resources/solr/applicationContext-solr.xml"/> -->
	<aop:aspectj-autoproxy />
	<!-- 扫描service自动装配包 -->
	<context:component-scan base-package="cn.cj.service.*" />

</beans>